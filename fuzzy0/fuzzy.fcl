FUNCTION_BLOCK crossroads

VAR_INPUT
	RQL: REAL;		// red queue list
	RGT: REAL;		// remaining green time
	AG:   REAL;		// arrival during green
	//AGDT:REAL;		// average green discharge time
END_VAR

VAR_OUTPUT
	ST:REAL; 		// signal timing
END_VAR

FUZZIFY RQL
	TERM few := (0,1) (4,0);
	TERM moderate := (3,0) (5,1) (7,0);
	TERM many := (6,0) (10,1);
END_FUZZIFY

FUZZIFY RGT
	TERM few := (0.0,1) (0.4,0);
	TERM moderate := (0.3,0) (0.5,1) (0.7,0);
	TERM many := (0.6,0) (1.0,1);
END_FUZZIFY

FUZZIFY AG
	TERM few := (0,1) (4,0);
	TERM moderate := (3,0) (5,1) (7,0);
	TERM many := (6,0) (10,1);
END_FUZZIFY

/*
FUZZIFY AGDT
	TERM normal :=
	TERM long :=
	TERM very long :=
END_FUZZIFY
*/

DEFUZZIFY ST
	TERM decrease := (-10,1) (-1,0);
	TERM nochange := (-3,0) (0,1) (3,0);
	TERM increase := (1,0) (10,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF RQL IS many AND AG IS few AND RGT IS many THEN ST IS decrease;
	RULE 2 : IF RQL IS moderate THEN ST IS nochange;
	RULE 3 : IF RQL IS few AND AG IS many AND RGT IS few THEN ST IS increase;
END_RULEBLOCK

END_FUNCTION_BLOCK

